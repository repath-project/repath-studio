{:deps {:aliases [:dev]}

 :build-defaults {:build-hooks [(shadow-git-inject.core/hook)]}

 :dev-http {8080 "resources/public"
            8081 "target/browser-test"
            8082 ["portfolio/resources/public"
                  "resources/public/css"
                  "resources/public/"
                  "classpath:public"]}

 :builds
 {:main {:target :node-script
         :output-to "resources/main.js"
         :main electron.main/init!}

  :preload {:target :node-script
            :output-to "resources/preload.js"
            :main electron.preload/init!
            :hashbang false}

  :renderer {:target :browser
             :output-dir "resources/public/js"
             :js-options {:resolve {"fs" {:target :npm :require "graceful-fs"}
                                    "stream" {:target :npm :require "stream-browserify"}}}
             :compiler-options {:optimizations :simple
                                :silence-optimizations-warning true
                                :output-wrapper false
                                :output-feature-set :es-next
                                :pseudo-names true
                                :pretty-print true
                                :closure-defines {config/version :shadow-git-inject/version}}

             :dev {:compiler-options {:closure-defines {re-frame.trace.trace-enabled? true
                                                        day8.re-frame.tracing.trace-enabled? true}}

                   :devtools {:preloads [devtools.preload
                                         day8.re-frame-10x.preload.react-18
                                         dev]}}

             :release {:build-options {:ns-aliases {day8.re-frame.tracing
                                                    day8.re-frame.tracing-stubs}}}

             :modules {:shared {:entries [shadow.cljs.bootstrap.env]}

                       :renderer {:entries [renderer.core]
                                  :depends-on #{:shared}
                                  :init-fn renderer.core/init!}

                       :worker {:init-fn worker.core/init!
                                :web-worker true
                                :depends-on #{:shared}}}}

  :bootstrap {:target :bootstrap
              :output-dir "resources/public/js/bootstrap"
              :exclude #{cljs.js}
              :entries [cljs.js user]}

  :browser-test {:target :browser-test
                 :ns-regexp "-test$"
                 :runner-ns shadow.test.browser
                 :test-dir "target/browser-test"
                 :js-options {:resolve {"fs" {:target :npm :require "graceful-fs"}
                                        "stream" {:target :npm :require "stream-browserify"}}}}

  :karma-test {:target :karma
               :ns-regexp "-test$"
               :output-to "target/karma-test.js"
               :js-options {:resolve {"fs" {:target :npm :require "graceful-fs"}
                                      "stream" {:target :npm :require "stream-browserify"}}}}

  :portfolio {:target :browser
              :modules {:scenes {:init-fn portfolio/init!}}
              :output-dir "portfolio/resources/public/js"
              :js-options {:resolve {"fs" {:target :npm :require "graceful-fs"}
                                     "stream" {:target :npm :require "stream-browserify"}}}}}}
