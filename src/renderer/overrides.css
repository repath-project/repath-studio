/*
 Styles that override default css rules of third party components.
 Prefer custom views when possible, to avoid inflating this file.
*/

/* react-color */

.chrome-picker,
.photoshop-picker {
  background: transparent !important;
  box-shadow: none !important;
  color: var(--font-color) !important;

  div {
    border-width: 0 !important;
    color: var(--font-color) !important;
  }

  svg {
    fill: var(--font-color) !important;
    background: transparent !important;
    display: initial;
  }

  input {
    color: var(--font-color) !important;
    border: none !important;
    box-shadow: none !important;
  }
}

.photoshop-picker {
  @apply pb-3;

  label {
    font-size: 12px !important;
    line-height: 12px !important;
  }

  >div {
    background: transparent !important;
  }

  >div:last-child>div:last-child>div:last-child>div:last-child {

    >div:nth-child(1),
    >div:nth-child(2) {
      display: none !important;
    }

    >div:nth-child(3) {
      @apply bg-primary w-full !important;
      padding-top: 9px !important;

      >div:last-child {
        right: 5px !important;
        top: 7px !important;

        div {
          margin-bottom: 2px;
        }
      }
    }
  }

  input {
    width: 70% !important;
    margin-left: 30px !important;
  }

  >div:first-of-type {
    display: none;
  }
}

/* cmdk */

[cmdk-item],
[cmdk-empty] {
  @apply flex p-2 rounded items-center text-sm;

  &[data-selected="true"] {
    @apply overlay;
  }
}

[cmdk-list] {
  max-height: 50vh;
}

[cmdk-group-heading] {
  @apply p-2 text-muted uppercase font-bold text-2xs;
}

/* codemirror */

.CodeMirror-selected {
  @apply overlay !important;
}

.CodeMirror-cursor {
  border-left: 1px solid var(--font-color) !important;
  height: 16px !important;
}

.CodeMirror-matchingbracket {
  @apply overlay !important;
  text-decoration: none !important;
}

.CodeMirror-wrap {
  @apply form-element p-0;

  pre {
    word-break: break-word !important;
  }
}

.CodeMirror-gutters {
  @apply bg-secondary !important;
}

.CodeMirror {
  @apply font-mono h-auto z-0;
  background: transparent !important;
}

.CodeMirror-sizer {
  min-height: initial !important;
}

.CodeMirror-lines {
  @apply p-0;
}

/* react-timeline-editor */

.timeline-editor {
  @apply bg-primary w-full min-h-0 h-full !important;
  font-family: inherit !important;
  color: var(--font-color-muted) !important;
 }

 .timeline-editor-action {
  @apply overlay flex justify-around items-center pointer-events-none !important;

  &-selected {
    @apply border border-accent;
    .timeline-editor-action-left-stretch::after {
      border-left-color: var(--accent) !important;
    }
    .timeline-editor-action-right-stretch::after {
      border-right-color: var(--accent) !important;
    }
  }
}

.timeline-editor-time-area .ReactVirtualized__Grid {
  overflow: hidden !important;
}

.timeline-editor-cursor {
  border-color: var(--accent) !important;
}

.timeline-editor-cursor-top path {
  fill: var(--accent) !important;
}

.timeline-editor-time-unit {
  border-color: var(--border-color) !important;
}

.timeline-editor-time-unit-scale {
  color: var(--font-color-muted) !important;
}

.timeline-editor-edit-row {
  background-image: linear-gradient(var(--bg-primary), var(--bg-primary)),
                    linear-gradient(90deg, var(--border-color) 1px, transparent 0) !important;
}

/* react-d3-tree */

.rd3t-link {
  stroke : var(--border-color) !important;
  stroke-width: 3;
}

.rd3t-label__title {
  font-weight: normal !important;
  fill: inherit !important;
}

/* devtools */

.devtools * {
  background: transparent !important;
}
